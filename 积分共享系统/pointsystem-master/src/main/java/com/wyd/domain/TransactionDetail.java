package com.wyd.domain;
// Generated May 3, 2018 2:37:09 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlTransient;

/**
 * TransactionDetail generated by hbm2java
 */
@Entity
@Table(name = "transaction_detail", catalog = "points")
public class TransactionDetail implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Integer transactionId;
	private Membership membership;
	private ProductMembership productMembership;
	private TransType transType;
	private TransactionDetail transactionDetail;
	private Date transDetailDttm;
	private String userId;
	private Integer batchHeaderId;
	private Integer currencyId;
	private BigDecimal feeAmt;
	private BigDecimal discountAmt;
	private BigDecimal taxAmt;
	private BigDecimal netAmt;
	private BigDecimal overrideAmt;
	private String overrideReasonCd;
	private String createdById;
	private Date createdDttm;
	private String lastUpdatedById;
	private Date lastUpdatedDttm;
	private BigDecimal proratedAmt;
	private Integer transCompanyId;
	private Set<PointsDepositTransDetail> pointsDepositTransDetails = new HashSet<PointsDepositTransDetail>(0);
	private Set<PointsSpendTransDetail> pointsSpendTransDetails = new HashSet<PointsSpendTransDetail>(0);
	private Set<TransDetailPayment> transDetailPayments = new HashSet<TransDetailPayment>(0);
	private Set<TransactionDetail> transactionDetails = new HashSet<TransactionDetail>(0);

	public TransactionDetail() {
	}

	public TransactionDetail(TransType transType, Date transDetailDttm, BigDecimal feeAmt, BigDecimal netAmt,
			String createdById, Date createdDttm, String lastUpdatedById, Date lastUpdatedDttm) {
		this.transType = transType;
		this.transDetailDttm = transDetailDttm;
		this.feeAmt = feeAmt;
		this.netAmt = netAmt;
		this.createdById = createdById;
		this.createdDttm = createdDttm;
		this.lastUpdatedById = lastUpdatedById;
		this.lastUpdatedDttm = lastUpdatedDttm;
	}

	public TransactionDetail(Membership membership, ProductMembership productMembership, TransType transType,
			TransactionDetail transactionDetail, Date transDetailDttm, String userId, Integer batchHeaderId,
			Integer currencyId, BigDecimal feeAmt, BigDecimal discountAmt, BigDecimal taxAmt, BigDecimal netAmt,
			BigDecimal overrideAmt, String overrideReasonCd, String createdById, Date createdDttm,
			String lastUpdatedById, Date lastUpdatedDttm, BigDecimal proratedAmt, Integer transCompanyId,
			Set<PointsDepositTransDetail> pointsDepositTransDetails,
			Set<PointsSpendTransDetail> pointsSpendTransDetails, Set<TransDetailPayment> transDetailPayments,
			Set<TransactionDetail> transactionDetails) {
		this.membership = membership;
		this.productMembership = productMembership;
		this.transType = transType;
		this.transactionDetail = transactionDetail;
		this.transDetailDttm = transDetailDttm;
		this.userId = userId;
		this.batchHeaderId = batchHeaderId;
		this.currencyId = currencyId;
		this.feeAmt = feeAmt;
		this.discountAmt = discountAmt;
		this.taxAmt = taxAmt;
		this.netAmt = netAmt;
		this.overrideAmt = overrideAmt;
		this.overrideReasonCd = overrideReasonCd;
		this.createdById = createdById;
		this.createdDttm = createdDttm;
		this.lastUpdatedById = lastUpdatedById;
		this.lastUpdatedDttm = lastUpdatedDttm;
		this.proratedAmt = proratedAmt;
		this.transCompanyId = transCompanyId;
		this.pointsDepositTransDetails = pointsDepositTransDetails;
		this.pointsSpendTransDetails = pointsSpendTransDetails;
		this.transDetailPayments = transDetailPayments;
		this.transactionDetails = transactionDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TRANSACTION_ID", unique = true, nullable = false)
	public Integer getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Integer transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "MEMBERSHIP_ID")
	public Membership getMembership() {
		return this.membership;
	}

	public void setMembership(Membership membership) {
		this.membership = membership;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PRODUCT_MEMBERSHIP_ID")
	public ProductMembership getProductMembership() {
		return this.productMembership;
	}

	public void setProductMembership(ProductMembership productMembership) {
		this.productMembership = productMembership;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TRANS_TYPE_ID", nullable = false)
	public TransType getTransType() {
		return this.transType;
	}

	public void setTransType(TransType transType) {
		this.transType = transType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "REFERENCE_TRANS_DETAIL_ID")
	public TransactionDetail getTransactionDetail() {
		return this.transactionDetail;
	}

	public void setTransactionDetail(TransactionDetail transactionDetail) {
		this.transactionDetail = transactionDetail;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TRANS_DETAIL_DTTM", nullable = false, length = 19)
	public Date getTransDetailDttm() {
		return this.transDetailDttm;
	}

	public void setTransDetailDttm(Date transDetailDttm) {
		this.transDetailDttm = transDetailDttm;
	}

	@Column(name = "USER_ID", length = 30)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "BATCH_HEADER_ID")
	public Integer getBatchHeaderId() {
		return this.batchHeaderId;
	}

	public void setBatchHeaderId(Integer batchHeaderId) {
		this.batchHeaderId = batchHeaderId;
	}

	@Column(name = "CURRENCY_ID")
	public Integer getCurrencyId() {
		return this.currencyId;
	}

	public void setCurrencyId(Integer currencyId) {
		this.currencyId = currencyId;
	}

	@Column(name = "FEE_AMT", nullable = false, precision = 18, scale = 4)
	public BigDecimal getFeeAmt() {
		return this.feeAmt;
	}

	public void setFeeAmt(BigDecimal feeAmt) {
		this.feeAmt = feeAmt;
	}

	@Column(name = "DISCOUNT_AMT", precision = 18, scale = 4)
	public BigDecimal getDiscountAmt() {
		return this.discountAmt;
	}

	public void setDiscountAmt(BigDecimal discountAmt) {
		this.discountAmt = discountAmt;
	}

	@Column(name = "TAX_AMT", precision = 18, scale = 4)
	public BigDecimal getTaxAmt() {
		return this.taxAmt;
	}

	public void setTaxAmt(BigDecimal taxAmt) {
		this.taxAmt = taxAmt;
	}

	@Column(name = "NET_AMT", nullable = false, precision = 18, scale = 4)
	public BigDecimal getNetAmt() {
		return this.netAmt;
	}

	public void setNetAmt(BigDecimal netAmt) {
		this.netAmt = netAmt;
	}

	@Column(name = "OVERRIDE_AMT", precision = 18, scale = 4)
	public BigDecimal getOverrideAmt() {
		return this.overrideAmt;
	}

	public void setOverrideAmt(BigDecimal overrideAmt) {
		this.overrideAmt = overrideAmt;
	}

	@Column(name = "OVERRIDE_REASON_CD", length = 10)
	public String getOverrideReasonCd() {
		return this.overrideReasonCd;
	}

	public void setOverrideReasonCd(String overrideReasonCd) {
		this.overrideReasonCd = overrideReasonCd;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 100)
	public String getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(String createdById) {
		this.createdById = createdById;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DTTM", nullable = false, length = 19)
	public Date getCreatedDttm() {
		return this.createdDttm;
	}

	public void setCreatedDttm(Date createdDttm) {
		this.createdDttm = createdDttm;
	}

	@Column(name = "LAST_UPDATED_BY_ID", nullable = false, length = 100)
	public String getLastUpdatedById() {
		return this.lastUpdatedById;
	}

	public void setLastUpdatedById(String lastUpdatedById) {
		this.lastUpdatedById = lastUpdatedById;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATED_DTTM", nullable = false, length = 19)
	public Date getLastUpdatedDttm() {
		return this.lastUpdatedDttm;
	}

	public void setLastUpdatedDttm(Date lastUpdatedDttm) {
		this.lastUpdatedDttm = lastUpdatedDttm;
	}

	@Column(name = "PRORATED_AMT", precision = 18, scale = 4)
	public BigDecimal getProratedAmt() {
		return this.proratedAmt;
	}

	public void setProratedAmt(BigDecimal proratedAmt) {
		this.proratedAmt = proratedAmt;
	}

	@Column(name = "TRANS_COMPANY_ID")
	public Integer getTransCompanyId() {
		return this.transCompanyId;
	}

	public void setTransCompanyId(Integer transCompanyId) {
		this.transCompanyId = transCompanyId;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "transactionDetail")
	@XmlTransient
	public Set<PointsDepositTransDetail> getPointsDepositTransDetails() {
		return this.pointsDepositTransDetails;
	}

	public void setPointsDepositTransDetails(Set<PointsDepositTransDetail> pointsDepositTransDetails) {
		this.pointsDepositTransDetails = pointsDepositTransDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "transactionDetail")
	@XmlTransient
	public Set<PointsSpendTransDetail> getPointsSpendTransDetails() {
		return this.pointsSpendTransDetails;
	}

	public void setPointsSpendTransDetails(Set<PointsSpendTransDetail> pointsSpendTransDetails) {
		this.pointsSpendTransDetails = pointsSpendTransDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "transactionDetail")
	@XmlTransient
	public Set<TransDetailPayment> getTransDetailPayments() {
		return this.transDetailPayments;
	}

	public void setTransDetailPayments(Set<TransDetailPayment> transDetailPayments) {
		this.transDetailPayments = transDetailPayments;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "transactionDetail")
	@XmlTransient
	public Set<TransactionDetail> getTransactionDetails() {
		return this.transactionDetails;
	}

	public void setTransactionDetails(Set<TransactionDetail> transactionDetails) {
		this.transactionDetails = transactionDetails;
	}

}
