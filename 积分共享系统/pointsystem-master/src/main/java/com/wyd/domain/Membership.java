package com.wyd.domain;
// Generated May 3, 2018 2:37:09 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Membership generated by hbm2java
 */
@Entity
@Table(name = "membership", catalog = "points")
public class Membership implements java.io.Serializable {

	private static final long serialVersionUID = 4630623850134576496L;
	
	private Integer membershipId;
	private Company company;
	private Status status;
	private String membershipNum;
	private String lastUpdatedById;
	private String createdById;
	private String enterpriseCd;
	private int productLineId;
	private String externalMembershipId;
	private Integer memberTypeId;
	private String lastName;
	private String firstName;
	private String email;
	private String address;
	private String cellPhone;
	private Set<PointsAccount> pointsAccounts = new HashSet<PointsAccount>(0);
	private Set<ProductMembership> productMemberships = new HashSet<ProductMembership>(0);
	private Set<TransDetailPayment> transDetailPayments = new HashSet<TransDetailPayment>(0);
	private Set<TransactionDetail> transactionDetails = new HashSet<TransactionDetail>(0);
	private Set<PointsTransHeader> pointsTransHeaders = new HashSet<PointsTransHeader>(0);

	public Membership() {
	}

	public Membership(Status status, Date initialDttm, String membershipNum, Date lastUpdatedDttm,
			String lastUpdatedById, Date createdDttm, String createdById, String enterpriseCd, int productLineId,
			String lastName, String firstName, String email, String address, String cellPhone) {
		this.status = status;
		this.membershipNum = membershipNum;
		this.lastUpdatedById = lastUpdatedById;
		this.createdById = createdById;
		this.enterpriseCd = enterpriseCd;
		this.productLineId = productLineId;
		this.lastName = lastName;
		this.firstName = firstName;
		this.email = email;
		this.address = address;
		this.cellPhone = cellPhone;
	}

	public Membership(Company company, Status status, Date initialDttm, String membershipNum, Date lastUpdatedDttm,
			String lastUpdatedById, Date createdDttm, String createdById, String enterpriseCd, int productLineId,
			String externalMembershipId, Integer memberTypeId, String lastName, String firstName, String email,
			String address, String cellPhone, Set<PointsAccount> pointsAccounts,
			Set<ProductMembership> productMemberships, Set<TransDetailPayment> transDetailPayments,
			Set<TransactionDetail> transactionDetails, Set<PointsTransHeader> pointsTransHeaders) {
		this.company = company;
		this.status = status;
		this.membershipNum = membershipNum;
		this.lastUpdatedById = lastUpdatedById;
		this.createdById = createdById;
		this.enterpriseCd = enterpriseCd;
		this.productLineId = productLineId;
		this.externalMembershipId = externalMembershipId;
		this.memberTypeId = memberTypeId;
		this.lastName = lastName;
		this.firstName = firstName;
		this.email = email;
		this.address = address;
		this.cellPhone = cellPhone;
		this.pointsAccounts = pointsAccounts;
		this.productMemberships = productMemberships;
		this.transDetailPayments = transDetailPayments;
		this.transactionDetails = transactionDetails;
		this.pointsTransHeaders = pointsTransHeaders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "MEMBERSHIP_ID", unique = true, nullable = false)
	public Integer getMembershipId() {
		return this.membershipId;
	}

	public void setMembershipId(Integer membershipId) {
		this.membershipId = membershipId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SOURCE_COMPANY_ID")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "STATUS_ID", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Column(name = "MEMBERSHIP_NUM", nullable = false, length = 30)
	public String getMembershipNum() {
		return this.membershipNum;
	}

	public void setMembershipNum(String membershipNum) {
		this.membershipNum = membershipNum;
	}

	@Column(name = "LAST_UPDATED_BY_ID", nullable = false, length = 100)
	public String getLastUpdatedById() {
		return this.lastUpdatedById;
	}

	public void setLastUpdatedById(String lastUpdatedById) {
		this.lastUpdatedById = lastUpdatedById;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 100)
	public String getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(String createdById) {
		this.createdById = createdById;
	}

	@Column(name = "ENTERPRISE_CD", nullable = false, length = 10)
	public String getEnterpriseCd() {
		return this.enterpriseCd;
	}

	public void setEnterpriseCd(String enterpriseCd) {
		this.enterpriseCd = enterpriseCd;
	}

	@Column(name = "PRODUCT_LINE_ID", nullable = false)
	public int getProductLineId() {
		return this.productLineId;
	}

	public void setProductLineId(int productLineId) {
		this.productLineId = productLineId;
	}

	@Column(name = "EXTERNAL_MEMBERSHIP_ID", length = 30)
	public String getExternalMembershipId() {
		return this.externalMembershipId;
	}

	public void setExternalMembershipId(String externalMembershipId) {
		this.externalMembershipId = externalMembershipId;
	}

	@Column(name = "MEMBER_TYPE_ID")
	public Integer getMemberTypeId() {
		return this.memberTypeId;
	}

	public void setMemberTypeId(Integer memberTypeId) {
		this.memberTypeId = memberTypeId;
	}

	@Column(name = "LAST_NAME", nullable = false, length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "FIRST_NAME", nullable = false, length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "EMAIL", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "ADDRESS", nullable = false, length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "CELL_PHONE", nullable = false, length = 100)
	public String getCellPhone() {
		return this.cellPhone;
	}

	public void setCellPhone(String cellPhone) {
		this.cellPhone = cellPhone;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "membership")
	@XmlTransient
	public Set<PointsAccount> getPointsAccounts() {
		return this.pointsAccounts;
	}

	public void setPointsAccounts(Set<PointsAccount> pointsAccounts) {
		this.pointsAccounts = pointsAccounts;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "membership")
	@XmlTransient
	public Set<ProductMembership> getProductMemberships() {
		return this.productMemberships;
	}

	public void setProductMemberships(Set<ProductMembership> productMemberships) {
		this.productMemberships = productMemberships;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "membership")
	@XmlTransient
	public Set<TransDetailPayment> getTransDetailPayments() {
		return this.transDetailPayments;
	}

	public void setTransDetailPayments(Set<TransDetailPayment> transDetailPayments) {
		this.transDetailPayments = transDetailPayments;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "membership")
	@XmlTransient
	public Set<TransactionDetail> getTransactionDetails() {
		return this.transactionDetails;
	}

	public void setTransactionDetails(Set<TransactionDetail> transactionDetails) {
		this.transactionDetails = transactionDetails;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "membership")
	@XmlTransient
	public Set<PointsTransHeader> getPointsTransHeaders() {
		return this.pointsTransHeaders;
	}

	public void setPointsTransHeaders(Set<PointsTransHeader> pointsTransHeaders) {
		this.pointsTransHeaders = pointsTransHeaders;
	}

}
