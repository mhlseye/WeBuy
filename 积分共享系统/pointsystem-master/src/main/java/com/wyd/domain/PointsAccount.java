package com.wyd.domain;
// Generated May 3, 2018 2:37:09 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlTransient;

/**
 * PointsAccount generated by hbm2java
 */
@Entity
@Table(name = "points_account", catalog = "points")
public class PointsAccount implements java.io.Serializable {

	private static final long serialVersionUID = -6901548416105615224L;
	
	private Integer pointsAccountId;
	private Membership membership;
	private PointsAccountType pointsAccountType;
	private Program program;
	private Status status;
	private Date accountStartDttm;
	private String createdById;
	private Date createdDttm;
	private String lastUpdatedById;
	private Date lastUpdatedDttm;
	private String partnerMembershipId;
	private Integer partnerCompanyId;
	private Integer pointsTotal;
	
	@Column(name = "POINTS_TOTAL",length = 10)
	public Integer getPointsTotal() {
		return pointsTotal;
	}

	public void setPointsTotal(Integer pointsTotal) {
		this.pointsTotal = pointsTotal;
	}

	private Set<PointsDepositTransDetail> pointsDepositTransDetails = new HashSet<PointsDepositTransDetail>(0);

	public PointsAccount() {
	}

	public PointsAccount(PointsAccountType pointsAccountType, Program program, Status status, String createdById,
			Date createdDttm, String lastUpdatedById, Date lastUpdatedDttm) {
		this.pointsAccountType = pointsAccountType;
		this.program = program;
		this.status = status;
		this.createdById = createdById;
		this.createdDttm = createdDttm;
		this.lastUpdatedById = lastUpdatedById;
		this.lastUpdatedDttm = lastUpdatedDttm;
	}

	public PointsAccount(Membership membership, PointsAccountType pointsAccountType, Program program, Status status,
			Date accountStartDttm, String createdById, Date createdDttm, String lastUpdatedById, Date lastUpdatedDttm,
			String partnerMembershipId, Integer partnerCompanyId,
			Set<PointsDepositTransDetail> pointsDepositTransDetails) {
		this.membership = membership;
		this.pointsAccountType = pointsAccountType;
		this.program = program;
		this.status = status;
		this.accountStartDttm = accountStartDttm;
		this.createdById = createdById;
		this.createdDttm = createdDttm;
		this.lastUpdatedById = lastUpdatedById;
		this.lastUpdatedDttm = lastUpdatedDttm;
		this.partnerMembershipId = partnerMembershipId;
		this.partnerCompanyId = partnerCompanyId;
		this.pointsDepositTransDetails = pointsDepositTransDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "POINTS_ACCOUNT_ID", unique = true, nullable = false)
	public Integer getPointsAccountId() {
		return this.pointsAccountId;
	}

	public void setPointsAccountId(Integer pointsAccountId) {
		this.pointsAccountId = pointsAccountId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "MEMBERSHIP_ID")
	public Membership getMembership() {
		return this.membership;
	}

	public void setMembership(Membership membership) {
		this.membership = membership;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "POINTS_ACCOUNT_TYPE_CD", nullable = false)
	public PointsAccountType getPointsAccountType() {
		return this.pointsAccountType;
	}

	public void setPointsAccountType(PointsAccountType pointsAccountType) {
		this.pointsAccountType = pointsAccountType;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PROGRAM_ID", nullable = false)
	public Program getProgram() {
		return this.program;
	}

	public void setProgram(Program program) {
		this.program = program;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "STATUS_ID", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ACCOUNT_START_DTTM", length = 19)
	public Date getAccountStartDttm() {
		return this.accountStartDttm;
	}

	public void setAccountStartDttm(Date accountStartDttm) {
		this.accountStartDttm = accountStartDttm;
	}

	@Column(name = "CREATED_BY_ID", nullable = false, length = 100)
	public String getCreatedById() {
		return this.createdById;
	}

	public void setCreatedById(String createdById) {
		this.createdById = createdById;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DTTM", nullable = false, length = 19)
	public Date getCreatedDttm() {
		return this.createdDttm;
	}

	public void setCreatedDttm(Date createdDttm) {
		this.createdDttm = createdDttm;
	}

	@Column(name = "LAST_UPDATED_BY_ID", nullable = false, length = 100)
	public String getLastUpdatedById() {
		return this.lastUpdatedById;
	}

	public void setLastUpdatedById(String lastUpdatedById) {
		this.lastUpdatedById = lastUpdatedById;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATED_DTTM", nullable = false, length = 19)
	public Date getLastUpdatedDttm() {
		return this.lastUpdatedDttm;
	}

	public void setLastUpdatedDttm(Date lastUpdatedDttm) {
		this.lastUpdatedDttm = lastUpdatedDttm;
	}

	@Column(name = "PARTNER_MEMBERSHIP_ID", length = 30)
	public String getPartnerMembershipId() {
		return this.partnerMembershipId;
	}

	public void setPartnerMembershipId(String partnerMembershipId) {
		this.partnerMembershipId = partnerMembershipId;
	}

	@Column(name = "PARTNER_COMPANY_ID")
	public Integer getPartnerCompanyId() {
		return this.partnerCompanyId;
	}

	public void setPartnerCompanyId(Integer partnerCompanyId) {
		this.partnerCompanyId = partnerCompanyId;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "pointsAccount")
	@XmlTransient
	public Set<PointsDepositTransDetail> getPointsDepositTransDetails() {
		return this.pointsDepositTransDetails;
	}

	public void setPointsDepositTransDetails(Set<PointsDepositTransDetail> pointsDepositTransDetails) {
		this.pointsDepositTransDetails = pointsDepositTransDetails;
	}

}
